
public static function transform_days_in_months_array_into_month_fraction_array(
    $days_in_months_assoc_array_list
  ) {
  /*

      DESCONTINUED
      The solution chosen is with a simple array month by month
      See class FinancialFunctions

      Input param. is an array (list) of associative arrays, ie:
        [0=>['monthref'=>$monthref0, 'quant_days'=>$quant_days0],
         1=>['monthref'=>$monthref1, 'quant_days'=>$quant_days1],
         ...]
  */
  $fraction_days_in_months_list_of_assoc_array = array();
  foreach ($days_in_months_assoc_array_list as $key=>$assoc_array_monthref_n_days_in_it) {
    $monthyeardateref = $assoc_array_monthref_n_days_in_it['monthyeardateref'];
    $quant_days       = $assoc_array_monthref_n_days_in_it['quant_days'];
    $month = $monthyeardateref->month;
    $year  = $monthyeardateref->year;
    $total_days_in_month = cal_days_in_month(CAL_GREGORIAN, $month, $year);
    $month_fraction      = $quant_days / $total_days_in_month;
    $result_assoc_array = array();
    $result_assoc_array['monthyeardateref']  = $monthyeardateref;
    $result_assoc_array['month_fraction']    = $month_fraction;
    $fraction_days_in_months_list_of_assoc_array[] = $result_assoc_array;
  }
  return $fraction_days_in_months_list_of_assoc_array;
} // ends [static] transform_days_in_months_array_into_month_fraction_array()



/*



  // Method DEACTIVATED
  public static function format_monthyeardateref_as_m_slash_y($monthyeardateref) {
    if ($monthyeardateref == null) {
      return 'n/a';
    }
    /*
      This method is no longer needed, for Carbon can do that by:
        $dt->format('m/Y');

      This was needed before using the accessors & mutators technique to force Carbon dates (see above protected $dates)
    if (gettype($this->monthyeardateref)==gettype('s')) {
      $this->monthyeardateref = Carbon::createFromFormat('Y-m-d', $this->monthyeardateref);
    }
    * /
    // toDayDateTimeString() => Thu, Dec 25, 1975 2:15 PM
    $datestring = $monthyeardateref->toDayDateTimeString();
    $pos_for_3letter_month = 5;
    $month_str = substr($datestring, $pos_for_3letter_month, 3); // = "Dec" (December)
    $pos_for_2digit_year = 15;
    if ($monthyeardateref->day < 10) {
      // if day >= 10, position is 15, else it's 14
      $pos_for_2digit_year = 14;
    }
    $year_str  = substr($datestring, $pos_for_2digit_year, 2); // = "75" (of 1975)
    $outstr    = $month_str . "/" . $year_str;
    return $outstr;
  } // ends [static] format_monthyeardateref_as_m_slash_y()
*/
